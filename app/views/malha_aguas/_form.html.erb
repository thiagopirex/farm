<%= form_for(@malha_agua) do |f| %>
  <% if @malha_agua.errors.any? %>
    <div id="error_explanation">
      <h2><%= pluralize(@malha_agua.errors.count, "error") %> prohibited this agua from being saved:</h2>

      <ul>
      <% @malha_agua.errors.full_messages.each do |message| %>
        <li><%= message %></li>
      <% end %>
      </ul>
    </div>
  <% end %>
  
  <%= f.hidden_field :propriedade_id, :value => @propriedade.id %>
  <%= hidden_field_tag(:linha, 'valor') %>
  
  <div class="container">
    <div class="row">
        <div class="row">
            <div class="col-md-8" id="map" style="width: 75%"></div>
            <div class="col-md-4 open" id="sidebar" style="width: 24%">
				<div class="field">
					<div class="actions">
					    <%= f.submit ( f.object.new_record? ? "Criar" : "Atualizar"), class:"btn btn-success btn-md"%>
					    <%= link_to 'Voltar', @propriedade , class:"btn btn-default btn-md"%>
					</div>
				</div>
			</div>
        </div>
    </div>
</div>
  
  <script>
  var map;
  
  // Initialise the FeatureGroup to store editable layers
  var drawnItems = new L.FeatureGroup();
	
  drawMap();
  
  function drawMap() {
  
   //carrega layer linha de água existentes
	var layerLinhasAgua = L.layerGroup();
    <% @malha_aguas.each do |m| %>
        <% if @malha_agua.id != m.id %>
		   	stringGeometria = '<%= m.getGeoJsonFromRGeoLine %>';
		   	id = <%= m.id %>;
		   	link = "<a href='/malha_aguas/" + id + "/edit'>Editar</a>";
		   	link = link + " | <a data-confirm='Tem certeza?' rel='nofollow' data-method='delete' href='/malha_aguas/" + id + "'>Excluir</a>"
		   	addLayerMalhaAgua(stringGeometria, link, layerLinhasAgua);
	   	<% end %>
    <% end %>
    
  	//layers opcionais
	var overlays;
  	var geometriaSede =  '<%= @propriedade.getGeoJsonFromRGeoPoint %>';
  	var mapOptions = getMapOptions(geometriaSede);
  	<% if !@malha_aguas.nil?%>
  		var layersDefault = [layerLinhasAgua, google];
  		mapOptions = getMapOptionsWithLayers(geometriaSede, layersDefault);
		overlays = {
    		"Cursos de Água existentes": layerLinhasAgua
	    }
  	<% else %>
  		mapOptions = getMapOptions(geometriaSede);	
  	<% end %>
  	
	map = L.map('map', mapOptions);
	
    addCollapseControl(map);
	L.control.layers(baseMaps).addTo(map);
	L.control.measure(measureOptions).addTo(map);
	addReloadControl(map);
	
	var editar = false;
	
	
    addLatLng(map);
	
	var stringGeometria = '<%= @linha %>';
    if (stringGeometria != "") {
		stringGeometria = replaceAll(stringGeometria, "&quot;", "\"");
		
		var features = JSON.parse(stringGeometria);
		var geoJson = L.geoJson(features, {
			onEachFeature: function (feature, layer) {
				layer.setIcon(aguaEdicaoIcon);
				layer.addTo(drawnItems);
		   }
		});
		

		editar = true;
	}
	
	
	// Initialise the draw control and pass it the FeatureGroup of editable layers
	var drawControlFull = new L.Control.Draw({
		draw: {
			polyline: true,
			marker: false,
			circle: false,
			rectangle: false,
			polygon: false
		},
  		edit: {
    		featureGroup: drawnItems
  		}
	});
	
	var drawControlEditOnly = new L.Control.Draw({
    	edit: {
        	featureGroup: drawnItems
    	},
    	draw: false
	});
	
	map.addLayer(drawnItems);
	
	if (editar) {
		map.removeControl(drawControlFull);
        map.addControl(drawControlEditOnly);
	} else {
		map.addControl(drawControlFull);
	}
	
	map.on(L.Draw.Event.EDITED, editGeometry);
	
	
	map.on(L.Draw.Event.CREATED, function (e) {
  		var layer = e.layer;
	  	layer.addTo(drawnItems);
		   	
		capturarGeometria(layer);
    	
    	map.removeControl(drawControlFull);
        map.addControl(drawControlEditOnly);
	});
	
	
	map.on(L.Draw.Event.DELETED, function(e) {
    	var type = e.layerType;
        var layer = e.layer;
		var check =  Object.keys(drawnItems._layers).length;
	    if (check === 0){
	        map.removeControl(drawControlEditOnly);
	        map.addControl(drawControlFull);
	    };
	    document.getElementById('linha').value = "";
	});
}
function capturarGeometria(layer) {
	// here you can get it in geojson format
    var geojson = layer.toGeoJSON();
    var json = JSON.stringify(geojson);
    
    document.getElementById('linha').value = json;
}
function editGeometry(e) {
	drawnItems.eachLayer(function (layer) {
		capturarGeometria(layer);
	});
}
</script>
<% end %>
